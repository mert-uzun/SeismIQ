AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SeismIQ Backend Services

Globals:
  Function:
    Runtime: java21
    MemorySize: 512
    Timeout: 30

Resources:
  # API Gateway (explicit; avoid the reserved "ServerlessRestApi" id)
  SeismiqApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn:
              Fn::GetAtt:
                - CognitoUserPool
                - Arn
            Identity:
              Header: Authorization
            Type: COGNITO_USER_POOLS
        DefaultAuthorizer: CognitoAuthorizer
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  # Lambda Functions
  EarthquakeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.seismiq.earthquake.EarthquakeHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      CodeUri: ../earthquake-service/target/earthquake-service.jar
      Environment:
        Variables:
          REGION:
            Ref: AWS::Region
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: EarthquakesTable
      Events:
        GetEarthquakes:
            Type: Api
            Properties:
              RestApiId:
                Ref: SeismiqApi
              Path: /earthquakes
              Method: GET
              Auth:
                Authorizer: CognitoAuthorizer
        CreateEarthquake:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /earthquakes
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
        GetEarthquakeById:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /earthquakes/{earthquakeId}
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
        GetByLocation:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /earthquakes/location
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  # Cognito User Pool
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: SeismiqUserPool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: address
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: isVolunteer
          AttributeDataType: String
          Mutable: true
          Required: false
        - Name: isSocialWorker
          AttributeDataType: String
          Mutable: true
          Required: false

  # Cognito User Pool Client
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: CognitoUserPool
      ClientName: SeismiqUserPoolClient
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  # DynamoDB Tables - Using existing tables
  EarthquakesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName:
        Fn::Sub: "${AWS::StackName}-Earthquakes"
      AttributeDefinitions:
        - AttributeName: earthquakeId
          AttributeType: S
      KeySchema:
        - AttributeName: earthquakeId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  UsersTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName:
        Fn::Sub: "${AWS::StackName}-Users"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH

  ReportsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName:
        Fn::Sub: "${AWS::StackName}-Reports"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: reportId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: reportId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserReportsIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  PriorityZonesTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName:
        Fn::Sub: "${AWS::StackName}-PriorityZones"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: zoneId
          AttributeType: S
      KeySchema:
        - AttributeName: zoneId
          KeyType: HASH

  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../user-service/target/user-service.jar
      Handler: com.seismiq.user.UserHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: UsersTable
      Events:
        CreateUser:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /users
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
        GetUser:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /users/{userId}
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  ReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../report-service/target/report-service.jar
      Handler: com.seismiq.report.ReportHandler::handleRequest
      Runtime: java21
      MemorySize: 512
      Timeout: 30
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: ReportsTable
      Events:
        ListReports:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
        CreateReport:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
        GetReport:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports/{reportId}
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
        UpdateReport:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports/{reportId}
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer
        DeleteReport:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports/{reportId}
            Method: DELETE
            Auth:
              Authorizer: CognitoAuthorizer
        UpdateReportStatus:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports/{reportId}/status
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer
        UpdateReportLocation:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports/{reportId}/location
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer
        GetUserReports:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /users/{userId}/reports
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
        GetReportsByCategory:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports/category/{category}
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
        GetReportsByStatus:
          Type: Api
          Properties:
            RestApiId:
              Ref: SeismiqApi
            Path: /reports/status/{status}
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  # SNS Topic for Landmark Notifications
  LandmarkNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName::Sub:: ${AWS::StackName}-landmark-notifications

  # SNS Platform Application for Mobile Push Notifications
  MobilePushPlatformApplication:
    Type: AWS::SNS::PlatformApplication
    Properties:
      Name::Sub:: ${AWS::StackName}-mobile-push
      Platform: GCM  # For Android. Use APNS for iOS
      Attributes:
        PlatformCredential: ${self:custom.gcmApiKey}  # Add this to your parameters

  LandmarksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName::Sub:: ${AWS::StackName}-landmarks
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: landmarkId
          AttributeType: S
        - AttributeName: category
          AttributeType: S
        - AttributeName: reportId
          AttributeType: S
        - AttributeName: geohash
          AttributeType: S
      KeySchema:
        - AttributeName: landmarkId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: CategoryIndex
          KeySchema:
            - AttributeName: category
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: ReportIndex
          KeySchema:
            - AttributeName: reportId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: LocationIndex
          KeySchema:
            - AttributeName: geohash
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      Tags:
        - Key: Service
          Value: landmark

Outputs:
  ApiURL:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: "https://${SeismiqApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  UserPoolId:
    Description: Cognito User Pool ID
    Value:
      Ref: CognitoUserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value:
      Ref: CognitoUserPoolClient
